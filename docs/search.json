[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 blog2newsletter authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert M Flight. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Flight RM (2023). blog2newsletter: Helps Send Blog Posts Emails. https://rmflight.github.io/blog2newsletter, https://github.com/rmflight/blog2newsletter.","code":"@Manual{,   title = {blog2newsletter: Helps You Send Blog Posts as Emails},   author = {Robert M Flight},   year = {2023},   note = {https://rmflight.github.io/blog2newsletter, https://github.com/rmflight/blog2newsletter}, }"},{"path":"/index.html","id":"blog2newsletter","dir":"","previous_headings":"","what":"An R package to send blog posts as emails / newsletters.","title":"An R package to send blog posts as emails / newsletters.","text":"goal blog2newsletter provide relatively simple way send R based blog posts emails subscribers.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package to send blog posts as emails / newsletters.","text":"can install development version blog2newsletter GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"rmflight/blog2newsletter\")"},{"path":"/index.html","id":"id_2-second-overview","dir":"","previous_headings":"","what":"2 Second Overview","title":"An R package to send blog posts as emails / newsletters.","text":"blog question RSS feed entry essentially full post. subscribers categories want know Google Sheet, copy stored locally well. tidyRSS parses RSS get emailable version post, find subscribers email based matching categories, draft email. gmailr either shows us draft, sends newsletter email, records sent cache don’t accidentally send multiples post.","code":""},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"An R package to send blog posts as emails / newsletters.","text":"current version based particular workflow: GMail send messages; Google Forms Google Sheets store subscriber information; Blog RSS feed generate content goes newsletter. means need Google account, project, Gmail Google Sheets API authorized. may eventually change pieces needed, right now, expects. gmailr quick start good example set project right permissions.","code":""},{"path":"/index.html","id":"gmail-oauth-scopes","dir":"","previous_headings":"Prerequisites","what":"Gmail Oauth Scopes","title":"An R package to send blog posts as emails / newsletters.","text":"One important thing note, initial oauth setup, whatever scopes use , set blog2newsletter workflow, make sure scopes identical, whole browser oauth flow (ask many times took realized different scope causing ). project, really need compose send scopes, can see draft Gmail want, send behalf, shown :","code":"gm_auth(scopes = c(\"compose\", \"send\"), ...)"},{"path":"/index.html","id":"google-sheets-oauth-scopes","dir":"","previous_headings":"Prerequisites","what":"Google Sheets Oauth Scopes","title":"An R package to send blog posts as emails / newsletters.","text":"Similarly, Google Sheets needs able read response sheet using record form responses.","code":"gs4_auth(scopes = \"https://www.googleapis.com/auth/spreadsheets.readonly\", ...)"},{"path":"/index.html","id":"a-note-on-storing-the-secrets-json-and-oauth","dir":"","previous_headings":"Prerequisites","what":"A Note on Storing the Secrets JSON and Oauth","title":"An R package to send blog posts as emails / newsletters.","text":"definitely recommend specific Google project API secrets don’t need shared across projects. addition, directory / R project ’s , part blog directory use static site generator, committing nothing, except maybe _blog2newsletter.R script really want . helps avoid accidentally committing secrets tokens generating. Whether part blog directory project , can help avoid accidentally commiting git using usethis add secrets directory .gitignore file.","code":"usethis::use_git_ignore(\"secrets\")"},{"path":"/index.html","id":"subscription-categories","dir":"","previous_headings":"","what":"Subscription Categories","title":"An R package to send blog posts as emails / newsletters.","text":"Another aspect used heavily blog post categories. many cases, blogs use categories readers can find things interesting . example, guess people probably read posts focus R (actually guessing don’t actually track traffic) categories. Therefore, can give potential subscribers categories choose . categories put subscription form:  categories based looking blog sidebar, looking categories posts. don’t categories, can give option , subscribers get every post.","code":""},{"path":[]},{"path":"/index.html","id":"create-a-google-form-to-store-subscribers","dir":"","previous_headings":"Getting Setup","what":"Create a Google Form to Store Subscribers","title":"An R package to send blog posts as emails / newsletters.","text":"Assuming Google account (lets face , basically assumed entire workflow), create form https://docs.google.com/forms. form collect emails (seriously, can’t get email newsletter without email address): Settings -> Responses -> Collect email addresses ->  using categories, add categories checkboxes subscribers can choose multiple subjects posts. using categories, least add option “”. Mainly first version blog2newsletter checks one, absence categories means one get newsletter. Make sure put link form somewhere prominent blog!","code":""},{"path":"/index.html","id":"setup-an-r--rstudio-project","dir":"","previous_headings":"Getting Setup","what":"Setup an R / RStudio Project","title":"An R package to send blog posts as emails / newsletters.","text":"going pretend ’ve made project called blog_subscriptions. overall file structure ’ll end project. Keep mind file names secrets oauth different, just shows setup.","code":"├── _blog2newsletter │   ├── emails │   └── subscribers ├── _blog2newsletter.R ├── secrets │   ├── google-project-secrets.json │   └── gargle_cache │       ├── gmailr_oauth │       └── goooglesheets4_oauth"},{"path":"/index.html","id":"google-secrets-and-oauth","dir":"","previous_headings":"Getting Setup","what":"Google Secrets and Oauth","title":"An R package to send blog posts as emails / newsletters.","text":"Download secrets JSON file Google project, store secrets (chosen location). oauth setup gmailr googlesheets4. can using code , give browser window verify . oauth tokens stored, won’t browser token expires, long don’t change scopes parameter. code, way, always top either _blog2newsletter.R, script use generate newsletter.","code":"options(   gargle_oauth_cache = \"secrets/gargle_cache/\",   gargle_oauth_email = \"your_email@gmail.com\" )  library(gmailr) gm_auth_configure(path  = \"secrets/secrets_file.json\") gm_auth(scopes = c(\"compose\", \"send\"), email = \"your_email@gmail.com\")  library(googlesheets4) gs4_auth_configure(path = \"secrets/secrets_file.json\") gs4_auth(   scopes = \"https://www.googleapis.com/auth/spreadsheets.readonly\",   email = \"your_email@gmail.com\")"},{"path":"/index.html","id":"setup-the-blog2newsletter-cache-folder","dir":"","previous_headings":"Getting Setup","what":"Setup the blog2newsletter Cache Folder","title":"An R package to send blog posts as emails / newsletters.","text":"two files blog2newsletter uses keep track things, subscribers emails. subscribers: stores local copy form submissions Google Sheet aren’t always fetching new copy. Defaults refetching 168 hours (week). emails: stores emails ’ve actually sent, don’t accidentally send one , unless really want reason. default location folder called _blog2newsletter. Every function uses cache, also cache argument. don’t , get message go get subscriber data draft email.","code":"library(blog2newsletter) b2n_create_cache()"},{"path":"/index.html","id":"get-subscriber-sheet-id","dir":"","previous_headings":"Getting Setup","what":"Get Subscriber Sheet ID","title":"An R package to send blog posts as emails / newsletters.","text":"Now grab subscriber sheet ID Google, copy newsletter script. can see responses Google Sheet clicking little sheet icon form responses.  generate initial cache subscriber info.","code":"sheet_id = googlesheets4::as_sheet_id(\"urltosheet\") unclass(sheet_id) # copy this into your script to use for access, or use the URL if you want subscribers_id = \"your-sheet-id-from-above\" subscriber_data = b2n_fetch_subscribers(subscribers_id)"},{"path":"/index.html","id":"blog-rss","dir":"","previous_headings":"Getting Setup","what":"Blog RSS","title":"An R package to send blog posts as emails / newsletters.","text":"don’t already RSS feed blog, need set one want use blog2newsletter (see quarto blogs, well distill blogdown). Thus far, ’ve heavily tested blog2newsletter using local RSS feed quarto based blog. RSS feeds basically put entirety post entry RSS. confirm case blog! , change blog configuration full contents available RSS, just preview snippet. query RSS feed, grab blog post asked (typically latest), push email sent GMail However, works RSS feed {tidyrss} can parse, including hosted web, case want use different blogging platform. need tell script RSS feed lives. quarto blogs default outputs, just need blog directory. Alternatively, provide full path index.xml file, URL hosted version .","code":"# default blog_dir = \"~/path_to/blog_source\" # another local blog source blog_dir = \"~/path_to/blog_source/rendered/index.xml\" # web based blog_dir = \"https://myblog.com/rss.xml\""},{"path":"/index.html","id":"test-composing-and-sending","dir":"","previous_headings":"Getting Setup","what":"Test Composing and Sending","title":"An R package to send blog posts as emails / newsletters.","text":"Finally, can fetch blog post draft email newsletter want send. Note extra_subject whatever subject want add email, normally way tell getting email newlsetter email. prepended title post sent . want preview (authorized gmailr correct scopes), can use b2n_create_draft push GMail account preview email draft_email. thin wrapper around gmailr::gm_create_draft, blog2newsletter stores draft email list, email, post data can checked previously sent newsletter emails.","code":"draft_email = b2n_compose(blog_dir,                           subscriber_data = subscriber_data,                           from_email = \"your_email@gmail.com\",                           extra_subject = \"subject\") b2n_create_draft(draft_email)"},{"path":"/index.html","id":"sending-posts-as-emails--newsletters","dir":"","previous_headings":"","what":"Sending Posts as Emails / Newsletters","title":"An R package to send blog posts as emails / newsletters.","text":"easiest way semi-automate sending posts put necessary code .R file name _blog2newsletter.R. file includes oauth code used , goes steps . example start . , new post want send, subscription project, : source’s file _blog2newsletter.R default, newsletter sent drafted!","code":"library(gmailr) library(googlesheets4) library(blog2newsletter) secrets_path = \"secrets/client_secret_file_googleusercontent.com.json\" oauth_cache = \"secrets/gargle_cache/\"  # don't forget to use your actual email my_gmail = \"my-gmail@gmail.com\"  # switch from directory, full path to index.xml, or url as needed blog_dir = \"blog-directory\"  # newsletter subject extra_subject = \"my newsletter\"  options(   gargle_oauth_cache = oauth_cache,   gargle_oauth_email = secrets_path )  gm_auth_configure(path  = ) gm_auth(scopes = c(\"compose\", \"send\"),          email = my_gmail)  gs4_auth_configure(path = secrets_path) gs4_auth(   scopes = \"https://www.googleapis.com/auth/spreadsheets.readonly\",   email = my_gmail)  subscribers_id = \"your-sheet-id\"  subscriber_data = b2n_fetch_subscribers(subscribers_id)  draft_email = b2n_compose(blog_dir,                           subscriber_data = subscriber_data,                           from_email = my_gmail,                           extra_subject = extra_subject)  b2n_send_newsletter(draft_email) blog2newsletter::b2n_run()"},{"path":"/reference/b2n_clean_subscribers.html","id":null,"dir":"Reference","previous_headings":"","what":"clean subscriber file — b2n_clean_subscribers","title":"clean subscriber file — b2n_clean_subscribers","text":"Given fetched subscriber Google Sheet, cleans reformats useful.","code":""},{"path":"/reference/b2n_clean_subscribers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean subscriber file — b2n_clean_subscribers","text":"","code":"b2n_clean_subscribers(subscriber_info)"},{"path":"/reference/b2n_clean_subscribers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clean subscriber file — b2n_clean_subscribers","text":"subscriber_info data.frame reading Google Sheet","code":""},{"path":"/reference/b2n_clean_subscribers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clean subscriber file — b2n_clean_subscribers","text":"tibble","code":""},{"path":"/reference/b2n_compose.html","id":null,"dir":"Reference","previous_headings":"","what":"composes the email — b2n_compose","title":"composes the email — b2n_compose","text":"Given blog directory, finds RSS feed file, grabs either latest post title matching supplied title, finds subscribers matching categories post.","code":""},{"path":"/reference/b2n_compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"composes the email — b2n_compose","text":"","code":"b2n_compose(   blog_dir,   post = \"latest\",   subscriber_data = NULL,   from_email = \"\",   extra_subject = \"\" )"},{"path":"/reference/b2n_compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"composes the email — b2n_compose","text":"blog_dir blog (see details) post whether fetch latest post matching title subscriber_data previously fetched subscriber data from_email sending email extra_subject extra text add email subject","code":""},{"path":"/reference/b2n_compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"composes the email — b2n_compose","text":"gmailr html message","code":""},{"path":"/reference/b2n_compose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"composes the email — b2n_compose","text":"expected time blog_dir point local copy blog, RSS file _site/index.xml, . blog_dir can also fully qualified path RSS file , even URL RSS file web, using blogging platform dont want copy RSS file local filesystem.","code":""},{"path":"/reference/b2n_compose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"composes the email — b2n_compose","text":"","code":"if (FALSE) { ## Using a local quarto blog, ## where index.xml is under _site/index.xml b2n_compose(\"path/to/local/blog\",              from_email = \"me@place.com\",              extra_subject = \"[cool newsletter]\")  ## using a local index.xml that is not in a quarto blog, or a non-standard location b2n_compose(\"path/to/local/blog/_out/index.xml\",             ...)  ## using a url bn2_compose(\"https://myblog.com/index.xml\",             ...) }"},{"path":"/reference/b2n_create_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"create cache — b2n_create_cache","title":"create cache — b2n_create_cache","text":"Creates cache directory used blog2newsletter.","code":""},{"path":"/reference/b2n_create_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create cache — b2n_create_cache","text":"","code":"b2n_create_cache(cache = \"_blog2newsletter\", r_script = \"_blog2newsletter.R\")"},{"path":"/reference/b2n_create_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create cache — b2n_create_cache","text":"cache cache subdirectory use r_script R script use","code":""},{"path":"/reference/b2n_create_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create cache — b2n_create_cache","text":"invisible","code":""},{"path":"/reference/b2n_draft_email.html","id":null,"dir":"Reference","previous_headings":"","what":"creates draft in gmail — b2n_draft_email","title":"creates draft in gmail — b2n_draft_email","text":"Given composed email, sends email GMail can viewed drafts folder.","code":""},{"path":"/reference/b2n_draft_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates draft in gmail — b2n_draft_email","text":"","code":"b2n_draft_email(draft_post)"},{"path":"/reference/b2n_draft_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates draft in gmail — b2n_draft_email","text":"draft_post post, created b2n_compose","code":""},{"path":"/reference/b2n_fetch_subscribers.html","id":null,"dir":"Reference","previous_headings":"","what":"fetch subscriber info — b2n_fetch_subscribers","title":"fetch subscriber info — b2n_fetch_subscribers","text":"Given Google Sheet ID, fetches subscriber data, cleans , caches need fetched .","code":""},{"path":"/reference/b2n_fetch_subscribers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetch subscriber info — b2n_fetch_subscribers","text":"","code":"b2n_fetch_subscribers(   sheet_id = NULL,   cache = \"_blog2newsletter\",   force_fetch = FALSE,   cache_timeout = 168 )"},{"path":"/reference/b2n_fetch_subscribers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetch subscriber info — b2n_fetch_subscribers","text":"sheet_id either Google Sheets URL ID cache cache subscriber data force_fetch override cache, force fetch web cache_timeout old cache definitely getting web","code":""},{"path":"/reference/b2n_fetch_subscribers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetch subscriber info — b2n_fetch_subscribers","text":"tibble","code":""},{"path":"/reference/b2n_find_post.html","id":null,"dir":"Reference","previous_headings":"","what":"find a post — b2n_find_post","title":"find a post — b2n_find_post","text":"Return either latest post, one matching provided title.","code":""},{"path":"/reference/b2n_find_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find a post — b2n_find_post","text":"","code":"b2n_find_post(blog_dir, post = \"latest\")"},{"path":"/reference/b2n_find_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find a post — b2n_find_post","text":"blog_dir location RSS post post get","code":""},{"path":"/reference/b2n_find_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find a post — b2n_find_post","text":"tibble","code":""},{"path":"/reference/b2n_init.html","id":null,"dir":"Reference","previous_headings":"","what":"create cache — b2n_init","title":"create cache — b2n_init","text":"Creates cache directory used blog2newsletter.","code":""},{"path":"/reference/b2n_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create cache — b2n_init","text":"","code":"b2n_init(r_script = \"_blog2newsletter.R\", cache = \"_blog2newsletter\")"},{"path":"/reference/b2n_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create cache — b2n_init","text":"cache subdirectory use","code":""},{"path":"/reference/b2n_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create cache — b2n_init","text":"invisible","code":""},{"path":"/reference/b2n_run.html","id":null,"dir":"Reference","previous_headings":"","what":"run full flow — b2n_run","title":"run full flow — b2n_run","text":"Runs workflow defined _blog2newsletter.R","code":""},{"path":"/reference/b2n_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run full flow — b2n_run","text":"","code":"b2n_run(run_file = \"_blog2newsletter.R\")"},{"path":"/reference/b2n_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run full flow — b2n_run","text":"run_file file run ","code":""},{"path":"/reference/b2n_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run full flow — b2n_run","text":"invisible","code":""},{"path":"/reference/b2n_send_newsletter.html","id":null,"dir":"Reference","previous_headings":"","what":"send it — b2n_send_newsletter","title":"send it — b2n_send_newsletter","text":"Send drafted newsletter!","code":""},{"path":"/reference/b2n_send_newsletter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"send it — b2n_send_newsletter","text":"","code":"b2n_send_newsletter(draft_email, cache = \"_blog2newsletter\", force = FALSE)"},{"path":"/reference/b2n_send_newsletter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"send it — b2n_send_newsletter","text":"draft_email email created b2n_compose cache blog2newsletter cache location force send even previously sent","code":""},{"path":[]},{"path":"/news/index.html","id":"blog2newsletter-001","dir":"Changelog","previous_headings":"","what":"blog2newsletter 0.0.1","title":"blog2newsletter 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
